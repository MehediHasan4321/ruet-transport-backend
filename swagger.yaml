openapi: 3.0.0
info:
  title: ruet-bus
  version: 1.0.0
  description: This is a ruet-bus services app backend api
  contact:
    name: Mehedi Hasan
    email: 126mehedi@gmail.com
    url: https://example.com
servers:
  - url: http://localhost/4000/api/v1
    description: development
tags:
  - name: Authentication
    description: Only for authentication (public)
  - name: bus
    description: only for bus related
paths:
  "/auth/singup":
    post:
      description: This endpoint will create a new user
      tags: [Authentication]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Enter Your name
                email:
                  type: string
                  format: email
                  example: example@gmail.com
                password:
                  type: string
                  format: password
                  example: password1234
      responses:
        "201":
          description: SignUp successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 201
                  message:
                    type: string
                    example: SignUp Successful
                  data:
                    type: object
                    properties:
                      access-token:
                        type: integer
                        format: int32
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        example: "/auth/signUp"
                      singIn:
                        type: string
                        example: "/auth/signIn"

# all components are here

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    "400":
      description: "Bad Request"
      content:
        "application/json":
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
                example: 400
              error:
                type: string
                example: Bad Request
              data:
                type: array
                items:
                  type: object
                  properties:
                    field:
                      type: string
                      example: email
                    message:
                      type: string
                      example: Invalid email
                    in:
                      type: string
                      enum: [query, body]
                      example: body
